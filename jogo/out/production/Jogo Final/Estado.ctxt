#BlueJ class context
comment0.params=
comment0.target=Estado()
comment0.text=construtor\ do\ estado\ inicial
comment1.params=e\ jogador
comment1.target=Estado(Estado,\ int)
comment1.text=contrutor\ a\ partir\ de\ um\ outro\ estado
comment10.params=
comment10.target=java.lang.String\ getDescricao()
comment10.text=\ retorna\ uma\ descri\u00E7\u00E3o\ do\ problema\ que\ esta\ representa\u00E7\u00E3o\r\n\ de\ estado\ resolve\r\n
comment11.params=l\ c
comment11.target=boolean\ livre(int,\ int)
comment11.text=public\ void\ joga(int\ l,\ int\ c,\ int\ jogador)\ {\r\n\ \ \ \ \ \ \ \ tabuleiro[l][c]\ \=\ jogador;\r\n}
comment12.params=novaLinha\ novaColuna
comment12.target=boolean\ estaDentroDoTabuleiro(int,\ int)
comment13.params=
comment13.target=java.util.ArrayList\ getSucessores()
comment13.text=gera\ uma\ lista\ de\ sucessores\ do\ nodo.
comment14.params=u
comment14.target=void\ setUtilidade(double)
comment14.text=retorna\ a\ utilidade\ do\ estado\ (qto\ maior\ melhor)
comment15.params=
comment15.target=double\ calculaUtilidade()
comment15.text=retorna\ a\ utilidade\ do\ estado\ (qto\ maior\ melhor)
comment16.params=
comment16.target=double\ getUtilidade()
comment17.params=
comment17.target=boolean\ eFinal()
comment17.text=verifica\ se\ o\ fim\ do\ jogo
comment18.params=jogador
comment18.target=boolean\ ganha(int)
comment19.params=
comment19.target=java.lang.String\ toString()
comment19.text=private\ boolean\ linhaIgualA(int\ l,\ char\ jogador)\ {\r\n\ \ \ \ \ \ \ \ for\ (int\ c\=0;c<tam;c++)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (tabuleiro[l][c]\ \!\=\ jogador)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ false;\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ return\ true;\r\n\ \ \ \ }\r\n\r\n\ \ \ \ private\ boolean\ colunaIgualA(int\ c,\ char\ jogador)\ {\r\n\ \ \ \ \ \ \ \ for\ (int\ l\=0;l<tam;l++)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (tabuleiro[l][c]\ \!\=\ jogador)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ false;\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ return\ true;\r\n\ \ \ \ }\r\n\r\n\ \ \ \ private\ boolean\ diagonalPrincialIgualA(char\ jogador)\ {\r\n\ \ \ \ \ \ \ \ for\ (int\ i\=0;i<tam;i++)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (tabuleiro[i][i]\ \!\=\ jogador)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ false;\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ return\ true;\r\n\ \ \ \ }\r\n\r\n\ \ \ \ private\ boolean\ diagonalSecundariaIgualA(char\ jogador)\ {\r\n\ \ \ \ \ \ \ \ for\ (int\ i\=0;i<tam;i++)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ int\ l\ \=\ tam-i-1;\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (tabuleiro[l][i]\ \!\=\ jogador)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ false;\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ return\ true;\r\n\ \ \ \ }\r\n\r\n\ \ \ \ private\ int\ contaBrancos()\ {\r\n\ \ \ \ \ \ \ \ int\ soma\ \=\ 0;\r\n\ \ \ \ \ \ \ \ for\ (int\ l\=0;l<tam;l++)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ c\=0;c<tam;c++)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (tabuleiro[l][c]\ \=\=\ '\ ')\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ soma++;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ return\ soma;\r\n}
comment2.params=novo\ jogador
comment2.target=Estado(java.lang.String,\ int)
comment2.text=contrutor\ a\ partir\ de\ um\ outro\ estado
comment3.params=jogada
comment3.target=void\ setProxJogada(Estado)
comment4.params=
comment4.target=Estado\ getProxJogada()
comment5.params=
comment5.target=int\ getJogador()
comment6.params=novo
comment6.target=void\ setTabuleiro(Tabuleiro)
comment7.params=linha\ coluna
comment7.target=int\ getValor(int,\ int)
comment8.params=j
comment8.target=void\ setJogador(int)
comment9.params=linhaInicial\ colunaInicial\ linha\ coluna\ jogador
comment9.target=void\ joga(int,\ int,\ int,\ int,\ int)
numComments=20
